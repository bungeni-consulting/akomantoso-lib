{"name":"akomantoso-lib","tagline":"a Java API for creating and editing Akoma Ntoso XML documents","body":"AkomaNtoso-lib provides a Java API for the [AkomaNtoso](http://www.akomantoso.org) schema. An AkomaNtoso XML document can be imported into its Java object representation, and also converted back to XML. The library packages versions 2 (final) and 3 (csd06) of the schema and supports both. Akoma Ntoso XML documents and Akoma Ntoso objects can be validated using the library.\r\n\r\n## Releases\r\n\r\nThe library is released as source code, and as a ready to use JAR file, [Click Here !](https://github.com/kohsah/akomantoso-lib/releases/latest).\r\n\r\n## Dependencies\r\nThe only dependency is [sl4j](http://www.sl4j.org) the logging facade library\r\n\r\n## Usage\r\n\r\n### Creating an Akoma Ntoso document using the Java API \r\nFirst we specify the version and create a marshaller object :\r\n```java\r\nAnVesion ver = new AnVersion(3, \"CSD06\");\r\nJAXBContext jc = ver.getContext();\r\nMarshaller marshaller = jc.createMarshaller();\r\nmarshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, \r\n        true);\r\n```\r\nNext create the Akoma Ntoso `akomaNtoso` root element :\r\n```java\r\n// create the root akomaNtoso element\r\nObjectFactory of = new ObjectFactory();\r\nAkomaNtosoType anType = new AkomaNtosoType();\r\nJAXBElement<AkomaNtosoType> rootElem = \r\n    of.createAkomaNtoso(anType);\r\n```\r\nNext create a `doc` element which is an open structure type, and set its `@name` and `@contains` attributes: \r\n```java\r\nOpenStructure ost = new OpenStructure();\r\nost.setName(\"test_doc\");\r\nost.setContains(VersionType.SINGLE_VERSION);\r\n```\r\nAdd a `meta` element to hold the documents metadata :\r\n```java\r\n// create the meta element\r\nMeta meta = new Meta();\r\n```\r\nAdd a `publication` within the `meta` element:\r\n```java\r\n// create the publication tag\r\nPublication pub = new Publication();\r\npub.setCurrentId(\"test_pub\");\r\npub.setName(\"pub\");\r\npub.setDate(\"2013-01-01\");\r\npub.setNumber(\"42\");\r\n// add the publication element to the meta element\r\nmeta.setPublication(pub);\r\n```\r\nNow create the `identification` element in meta :\r\n```java\r\n//create the identification element\r\nIdentification idf = new Identification();\r\nidf.setSource(\"#a_source\");\r\n```\r\nCreate the `FRBRWork` element and its child elements :\r\n```java\r\n//create a work element\r\nFRBRWork work = of.createFRBRWork();\r\n//set FRBRthis on work\r\nValueType vThis = new ValueType();\r\nvThis.setValue(\"/ak/bill/2013-01-01/A1/memorandum\");\r\nwork.setFRBRthis(vThis);\r\n//set FRBRuri on work\r\nValueType vURI = new ValueType();\r\nvURI.setValue(\"/ak/bill/2013-01-01/A1\");\r\nwork.getFRBRuri().add(vURI);\r\n//add the identification to the work\r\nidf.setFRBRWork(work);\r\n```\r\nAdd the `identification` element to the `meta` element ; and the `meta` to the document :\r\n```java\r\n//add the identifcatin on the meta\r\nmeta.setIdentification(idf);\r\n//add the meta \r\nost.setMeta(meta);\r\n//add the doc type to the akomaNtoso element\r\nanType.setDoc(ost);\r\nmarshaller.marshal(rootElem, System.out);\r\n```\r\n\r\nThe above code outputs an Akoma Ntoso document:\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<akomaNtoso \r\n  xmlns=\"http://docs.oasis-open.org/legaldocml/ns/akn/3.0/CSD06\">\r\n  <doc contains=\"singleVersion\" name=\"test_doc\">\r\n    <meta>\r\n      <identification source=\"#a_source\">\r\n        <FRBRWork>\r\n          <FRBRthis value=\"/ak/bill/2013-01-01/A1/memorandum\"/>\r\n          <FRBRuri value=\"/ak/bill/2013-01-01/A1\"/>\r\n        </FRBRWork>\r\n      </identification>\r\n      <publication date=\"2013-01-01\" number=\"42\" name=\"pub\" \r\n          currentId=\"test_pub\"/>\r\n    </meta>\r\n  </doc>\r\n</akomaNtoso>\r\n```\r\n\r\n### Loading an XML document, and modifying it with the API\r\n\r\nThe following loads an Akoma Ntoso document, and makes it accessible as a Java object: \r\n```java\r\n// load the context for the specific AKoma Ntoso version you want to use,\r\n// here we use the 3.0-csd06 version\r\n// open a Akoma Ntoso file\r\nFile _anDoc = new File(\"/path/to/akomantoso_doc.xml\");\r\n// use version 3 csd06\r\nAnVersion vSchema = new AnVersion(3, \"CSD06\");\r\nJAXBContext cxt = vSchema.getContext();\r\nUnmarshaller unmarshaller = jc.createUnmarshaller();\r\nJAXBElement<AkomaNtosoType> anType = \r\n    (JAXBElement<AkomaNtosoType>)unmarshaller.unmarshal(_anDoc);\r\n```\r\nAfter unmarshalling, the document is available for reading & modification via the API : \r\n```java\r\nAkomaNtosoType anDoc  = anType.getValue();\r\nString aName = anDoc.getDoc().getName();\r\nSystem.out.println(\" doc name = \" + aName);\r\nVersionType vType = anDoc.getDoc().getContains();\r\nSystem.out.println(\" doc contains = \" + vType.getValue());\r\n```\r\nIf the imported document looked like this :\r\n```xml\r\n<akomaNtoso \r\n xmlns=\"http://docs.oasis-open.org/legaldocml/ns/akn/3.0/CSD06\">\r\n\t<doc name=\"memorandum\" contains=\"originalVersion\">\r\n\t\t<meta>\r\n```\r\nThe java code above will output :\r\n```\r\ndoc name = memorandum\r\ndoc contains = originalVersion\r\n```\r\n\r\n## Building from Source\r\n\r\nThe library is built using maven, to build from source :\r\n```\r\ngit clone https://github.com/kohsah/akomantoso-lib.git -b master\r\nmvn package\r\n```\r\n\r\n## License\r\n\r\nLicensed using the Apache 2.0 license","google":"UA-46319824-1","note":"Don't delete this file! It's used internally to help with page regeneration."}