//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.12.09 at 12:35:58 PM IST 
//


package org.akomantoso.schema.v3.wd17;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 * <pre>
 * &lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;type xmlns="http://docs.oasis-open.org/legaldocml/ns/akn/3.0/WD17" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;Complex&lt;/type&gt;
 * </pre>
 * 
 * <pre>
 * &lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;name xmlns="http://docs.oasis-open.org/legaldocml/ns/akn/3.0/WD17" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;basehierarchy&lt;/name&gt;
 * </pre>
 * 
 * <pre>
 * &lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;comment xmlns="http://docs.oasis-open.org/legaldocml/ns/akn/3.0/WD17" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;
 * The complex type basehierarchy is not used by any element, but is derived by other types to contain the basic structure of hierarchical elements&lt;/comment&gt;
 * </pre>
 * 
 * 
 * <p>Java class for basehierarchy complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="basehierarchy">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice maxOccurs="unbounded" minOccurs="0">
 *         &lt;element ref="{http://docs.oasis-open.org/legaldocml/ns/akn/3.0/WD17}num" minOccurs="0"/>
 *         &lt;element ref="{http://docs.oasis-open.org/legaldocml/ns/akn/3.0/WD17}heading" minOccurs="0"/>
 *         &lt;element ref="{http://docs.oasis-open.org/legaldocml/ns/akn/3.0/WD17}subheading" minOccurs="0"/>
 *       &lt;/choice>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "basehierarchy", propOrder = {
    "numOrHeadingOrSubheading"
})
@XmlSeeAlso({
    ItemType.class,
    BlockContainerType.class,
    SpeechType.class,
    RecitalHierarchy.class,
    CitationHierarchy.class,
    DocContainerType.class,
    Hierarchy.class,
    Althierarchy.class
})
public class Basehierarchy {

    @XmlElementRefs({
        @XmlElementRef(name = "subheading", namespace = "http://docs.oasis-open.org/legaldocml/ns/akn/3.0/WD17", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "heading", namespace = "http://docs.oasis-open.org/legaldocml/ns/akn/3.0/WD17", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "num", namespace = "http://docs.oasis-open.org/legaldocml/ns/akn/3.0/WD17", type = JAXBElement.class, required = false)
    })
    protected List<JAXBElement<?>> numOrHeadingOrSubheading;

    /**
     * Gets the value of the numOrHeadingOrSubheading property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the numOrHeadingOrSubheading property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNumOrHeadingOrSubheading().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link Inlinereq }{@code >}
     * {@link JAXBElement }{@code <}{@link ComplexTypeInline }{@code >}
     * {@link JAXBElement }{@code <}{@link Inlinereq }{@code >}
     * 
     * 
     */
    public List<JAXBElement<?>> getNumOrHeadingOrSubheading() {
        if (numOrHeadingOrSubheading == null) {
            numOrHeadingOrSubheading = new ArrayList<JAXBElement<?>>();
        }
        return this.numOrHeadingOrSubheading;
    }

}
